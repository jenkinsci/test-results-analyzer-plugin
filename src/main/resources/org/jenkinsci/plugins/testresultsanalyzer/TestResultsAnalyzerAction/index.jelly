<?jelly escape-by-default='true'?>
<j:jelly xmlns:j="jelly:core" xmlns:st="jelly:stapler" xmlns:l="/lib/layout">
<l:layout title="Test Result Graph">
<st:include it="${it.project}" page="sidepanel.jelly" />
<st:bind var="remoteAction" value="${it}"/>
<l:main-panel>
<link href="${resURL}/plugin/test-results-analyzer/css/table-style.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/jquery/js/jquery-1.11.1.min.js"></script>

<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/handlebars-v2.0.0.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/highcharts.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/json3-min.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/highchart-exporting.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/highchart-offline-exporting.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/fuzzyset.js"></script>

<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/testresult.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/chart-generator.js"></script>
<script type="text/javascript" src="${resURL}/plugin/test-results-analyzer/js/test-result-analyzer-template.js"></script>
<script>

var $j = jQuery.noConflict();
</script>
<style type="text/css">
    .failed {
        background-color: ${it.failedColor};
    }

    .passed {
        background-color: ${it.passedColor};
    }

    .skipped{
        background-color: ${it.skippedColor};
    }

    .no_status{
        background-color: ${it.naColor};
    }
</style>
<j:set var="temp" value="${it.jsonLoadData}"/>
<j:set var="builds" value="${it.builds}"/>

<button id="settingsmenubutton">Options</button>
<div id="settingsmenu" style="display: none;">
	<table>
		<tr>
			<td>Number of builds:</td>
			<td>
				<input id="noofbuilds" type="number" value="${it.noOfBuilds}" min="1" step="1" disabled="${it.showAllBuilds}"/>
				(all: <input id="allnoofbuilds" type="checkbox" checked="${it.showAllBuilds}" />)
			</td>
		</tr>
		<tr>
			<td>Display run time for each test:</td>
			<td><input type="checkbox" id="show-build-durations" name="show-build-durations" checked="${it.showBuildTime}"/></td>
		</tr>
		<tr>
        	<td>Hide configuration methods (Only for TestNG results}</td>
        	<td><input type="checkbox" id="hide-config-methods" name="hide-config-methods" checked="${it.hideConfigurationMethods}"/></td>
        </tr>
		<tr>
			<td>Chart type:</td>
			<td>
				<input id="linegraph" type="checkbox" checked="${it.showLineGraph}" /> Line
				<input id="bargraph" type="checkbox" checked="${it.showBarGraph}" /> Bar
				<input id="piegraph" type="checkbox" checked="${it.showPieGraph}" /> Pie
			</td>
		</tr>
		<tr>
			<td>Chart Data Type:</td>
			<td>
				<select id="chartDataType">
					<option value="passfail">Passes/Failures</option>
					<option value="runtime">Test Runtimes</option>
				</select>
			</td>
		</tr>
    <tr>
      <td>Minimum score for exception message equality:</td>
      <td>
        <input id="minScoreExceptionMessageEquality" type="number" value="${it.minScoreExceptionMessageEquality}" min="0.1" step="0.1"/>
      </td>
    </tr>
    <tr>
      <td>Maxiumum string size to check for exception message equality:</td>
      <td>
        <input id="maxStringSizeExceptionMessageEquality" type="number" value="${it.maxStringSizeExceptionMessageEquality}" min="10" step="10"/>
      </td>
    </tr>
	</table>
	<div>
		<button id="getbuildreport">Update</button>
	</div>
</div>
<button id="downloadCSV" >Download Test (CSV)</button>
Search: <input id="filter" class="table-filter" type="text" placeholder="Test/Class/Package" onkeyup="searchTests()"/>

<div class="extrabuttons">
	<button id="expandall">Expand All</button>
	<button id="collapseall">Collapse All</button>
</div>
<br/>
<div id="tree">
   <div id="table-loading" style="display: none;">
       <img src="${resURL}/plugin/test-results-analyzer/images/loading2.gif"/>
   </div>

   <div class="test-history-table table">

   </div>
   <br/>

   <div class="worst-tests-table">

   </div>

   <div class="most-exceptions-table">

   </div>
</div>
<br/>
<br/>

<div id="charts">
   <div id="linechart">

   </div>
   <br/>

   <div id="piechart">

   </div>
<br/>

   <div id="barchart">

   </div>

</div>
<div id="builddetail">

</div>

<script>
	var runtimeLowThreshold = "${it.runTimeLowThreshold}";
	var runtimeHighThreshold = "${it.runTimeHighThreshold}";
  var minScoreExceptionMessageEquality = "${it.minScoreExceptionMessageEquality}";
  var maxStringSizeExceptionMessageEquality = "${it.maxStringSizeExceptionMessageEquality}";
    var customStatuses = {
        'PASSED':'PASSED',
        'SKIPPED':'SKIPPED',
        'FAILED':'FAILED',
        'N/A':'N/A'
    }
	function generateCharts() {
		var chartType = {
			type: jQuery("#chartDataType").val(),
			line: jQuery('#linegraph').is(':checked'),
			bar: jQuery('#bargraph').is(':checked'),
			pie: jQuery('#piegraph').is(':checked')
		}
		generateChart(chartType);

		//fixes Jenkins issue where page content is not correctly placed until the window is resized
		window.dispatchEvent(new Event('resize'));
	}

	jQuery(document).ready(function () {
		jQuery("#allnoofbuilds")[0].checked = ${it.showAllBuilds};
		jQuery("#show-build-durations")[0].checked = ${it.showBuildTime};
		jQuery("#hide-config-methods")[0].checked = ${it.hideConfigurationMethods};
		jQuery("#linegraph")[0].checked = ${it.showLineGraph};
		jQuery("#bargraph")[0].checked = ${it.showBarGraph};
		jQuery("#piegraph")[0].checked = ${it.showPieGraph};
		jQuery("#noofbuilds").attr('disabled', ${it.showAllBuilds});

		if ("${it.chartDataType}" === "runtime") {
			jQuery("#chartDataType").val("runtime");
			jQuery("#bargraph").attr('disabled', true);
		} else {
			jQuery("#chartDataType").val("passfail");
		}
		setCustomStatuses();
		populateTemplate();
	});

	jQuery("#settingsmenubutton").click(function () {
		jQuery("#settingsmenu").slideToggle(400, function () {
			//fixes Jenkins issue where page content is not correctly placed until the window is resized
			window.dispatchEvent(new Event('resize'));
		});

		//fixes Jenkins issue where page content is not correctly placed until the window is resized
		window.dispatchEvent(new Event('resize'));
	});

	jQuery("#allnoofbuilds").change(function () {
		jQuery("#noofbuilds").attr('disabled', this.checked);
	});

	jQuery("#chartDataType").change(function (e) {
		jQuery("#bargraph").attr('disabled', e.target.value == "runtime");
	});

	jQuery("#downloadCSV").click(function () {
	    var noOfBuilds = "-1";

        if (!jQuery("#allnoofbuilds").is(":checked")) {
            noOfBuilds = jQuery("#noofbuilds").val();
        }
        remoteAction.getExportCSV(displayValues, noOfBuilds, function(t) {
            download("Test Results.csv", t.responseObject());
        })
    });

	jQuery("#getbuildreport").click(function () {
		populateTemplate();
	});

	jQuery("#expandall").click(function () {
		expandAll();
	});

	jQuery("#collapseall").click(function () {
		collapseAll();
	});

    function setCustomStatuses(){
        customStatuses['PASSED'] = "${it.passedRepresentation}";
        customStatuses['SKIPPED'] = "${it.skippedRepresentation}";
        customStatuses['FAILED'] = "${it.failedRepresentation}";
        customStatuses['N/A'] = "${it.naRepresentation}";
    }

	function download(filename, text) {
		var element = document.createElement('a');
		element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));
		element.setAttribute('download', filename);
		element.style.display = 'none';
		document.body.appendChild(element);
		element.click();
		document.body.removeChild(element);
	}
</script>
  </l:main-panel>
  </l:layout>
</j:jelly>
